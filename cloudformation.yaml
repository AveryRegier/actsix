AWSTemplateFormatVersion: '2010-09-09'
Description: Deacon Care System Lambda, API Gateway, and IAM Role

Parameters:
  S3BucketName:
    Type: String
    Default: deacon-care-system
    Description: S3 bucket for Lambda access

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: actsix-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeaconCareSystemS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}
                  - !Sub arn:aws:s3:::${S3BucketName}/*
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  ActsixLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: actsix-site-lambda
      Handler: src/lambda.handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: site-lambda.zip
      Runtime: nodejs22.x
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          S3_BUCKET: !Ref S3BucketName

  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: actsix-site-lambda-http-api
      ProtocolType: HTTP

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ActsixLambda.Arn}/invocations
      PayloadFormatVersion: '2.0'

  ApiGatewayRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: ANY /{proxy+}
      Target: !Sub integrations/${ApiGatewayIntegration}

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: $default

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ActsixLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway.ApiId}/*

Outputs:
  ApiUrl:
    Description: API Gateway endpoint
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com
  LambdaName:
    Description: Lambda function name
    Value: !Ref ActsixLambda
  LambdaRoleArn:
    Description: Lambda IAM Role ARN
    Value: !GetAtt LambdaRole.Arn
